<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bobabrewery.repo.common.mapper.BreweryWalletStatusMapper">
    <resultMap id="BaseResultMap" type="com.bobabrewery.repo.common.domain.model.BreweryWalletStatus">
        <id property="id" column="id" jdbcType="BIGINT"/>
        <result property="type" column="type" jdbcType="INTEGER"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
        <result property="walletAddress" column="wallet_address" jdbcType="VARCHAR"/>
        <result property="amount" column="amount" jdbcType="DECIMAL"/>
        <result property="withdrawn" column="withdrawn" jdbcType="INTEGER"/>
        <result property="staked" column="staked" jdbcType="INTEGER"/>
        <result property="chainId" column="chain_id" jdbcType="INTEGER"/>
    </resultMap>
    <select id="selectByWalletAddressAndType" resultMap="BaseResultMap">
        select id,
               type,
               create_time,
               update_time,
               wallet_address,
               amount,
               withdrawn,
               staked,
               chain_id,
               contract_address
        from brewery_wallet_status
        where wallet_address = #{walletAddress}
          and `type` = #{type}
    </select>


    <insert id="insertSelective" keyColumn="id" keyProperty="id"
            parameterType="com.bobabrewery.repo.common.domain.model.BreweryWalletStatus" useGeneratedKeys="true">
        insert into brewery_wallet_status
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="type != null">type,</if>
            <if test="createTime != null">create_time,</if>
            <if test="walletAddress != null">wallet_address,</if>
            <if test="amount != null">amount,</if>
            <if test="withdrawn != null">withdrawn,</if>
            <if test="staked != null">staked,</if>
            <if test="chainId != null">chain_id,</if>
            <if test="contractAddress != null">contract_address,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">#{id,jdbcType=BIGINT},</if>
            <if test="type != null">#{type,jdbcType=INTEGER},</if>
            <if test="createTime != null">#{createTime,jdbcType=TIMESTAMP},</if>
            <if test="walletAddress != null">#{walletAddress,jdbcType=VARCHAR},</if>
            <if test="amount != null">#{amount,jdbcType=DECIMAL},</if>
            <if test="withdrawn != null">#{withdrawn,jdbcType=INTEGER},</if>
            <if test="staked != null">#{staked,jdbcType=INTEGER},</if>
            <if test="chainId != null">#{chainId,jdbcType=INTEGER},</if>
            <if test="contractAddress != null">#{contractAddress,jdbcType=VARCHAR},</if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective"
            parameterType="com.bobabrewery.repo.common.domain.model.BreweryWalletStatus">
        update brewery_wallet_status
        <set>
            <if test="type != null">
                type = #{type,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="walletAddress != null">
                wallet_address = #{walletAddress,jdbcType=VARCHAR},
            </if>
            <if test="amount != null">
                amount = #{amount,jdbcType=DECIMAL},
            </if>
            <if test="withdrawn != null">
                withdrawn = #{withdrawn,jdbcType=INTEGER},
            </if>
            <if test="staked != null">
                staked = #{staked,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
        and chain_id = #{chainId,jdbcType=INTEGER}
        and contract_address = #{contractAddress,jdbcType=VARCHAR}
    </update>

</mapper>
