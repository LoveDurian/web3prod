<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bobabrewery.repo.common.mapper.UserRegisterProductMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.bobabrewery.repo.common.domain.model.UserRegisterProduct">
        <id column="account_id" property="accountId"/>
        <result column="product_id" property="productId"/>
        <result column="staking_amount" property="stakingAmount"/>
        <result column="win_amount" property="winAmount"/>
        <result column="purchased" property="purchase"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        account_id, product_id, win_amount, purchase, create_time, update_time
    </sql>

    <!-- 通用修改列 -->
    <sql id="Base_Column_Update">
        <set>
            <if test="entity.productId != null">product_id=#{entity.productId},</if>
            <if test="entity.createTime != null">create_time=#{entity.createTime},</if>
            <if test="entity.updateTime != null">update_time=#{entity.updateTime},</if>
        </set>
    </sql>

    <insert id="insertOne">
        INSERT INTO user_register_product
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="accountId != null">account_id,</if>
            <if test="productId != null">product_id,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateTime != null">update_time,</if>
        </trim>
        VALUES
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="accountId != null">#{accountId},</if>
            <if test="productId != null">#{productId},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateTime != null">#{updateTime},</if>
        </trim>
    </insert>

    <select id="selectByParams" resultMap="BaseResultMap">
        select account_id, product_id
        from user_register_product
        where account_id = #{accountId}
          and product_id = #{productId}
    </select>
    <select id="selectByAccountId" resultMap="BaseResultMap">
        select urp.account_id, urp.product_id
        from user_register_product urp
                 left join product_contract pc on urp.product_id = pc.id
        where urp.account_id = #{accountId}
          and pc.status &lt; 4
    </select>

    <select id="findByAccountIdAndProductId" resultMap="BaseResultMap">
        select *
        from user_register_product
        where `account_id` = #{accountId}
          and `product_id` = #{productId}
    </select>
    <select id="findAllByProductId" resultMap="BaseResultMap">
        select *
        from user_register_product
        where product_id = #{productId}
    </select>

    <update id="updateByEntity">
        UPDATE user_register_product
        SET
        <if test="stakingAmount != null and stakingAmount != ''">
            staking_amount = #{stakingAmount}
        </if>
        <if test="winAmount != null and winAmount != ''">
            win_amount = #{winAmount}
        </if>
        WHERE account_id = #{accountId}
        AND product_id = #{productId}
    </update>

</mapper>
